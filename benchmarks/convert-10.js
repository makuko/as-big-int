import benchmark from 'benchmark';
import assert from 'assert';
import BN from 'bn.js';

import { convert10 } from '../build/benchmark.js';



const strings = [
    '63827481287523340933156458354634124244309616758167630842551007819073339395044662984225156970322839887301',
    '10786844337591444617703441461933166997288325232130329612391120321423394357762548044334051527984559940953869',
    '1822976693052954140391881607066705222541726964230025704494099334320553646461870619492454708229390630021203861',
    '308083061125949249726227991594273182609551856954874344059502787500173566252056134694224845690767016473583452509',
    '52066037330285423203732530579432167861014263825373764146055971087529332696597486763323998921739625784035603474021',
    '8799160308818236521430797667924036368511410586488166140683459113792457225724975263001755817773996757502016987109549',
    '1487058092190281972121804805879162146278428389116500077775504590230925271147520819447296733203805452017840870821513781',
    '251312817580157653288585012193578402721054397760688513144060275749026370823931018486593147911443121391015107168835828989',
    '42471866171046643405770867060714750059858193221556358721346186601585456669244342124234241997033887515081553111533255099141',
    '7177745382906882735575276533260792760116034654443024623907505535667942177102293818995586897498726990048782475849120111754829',
    '1213038969711263182312221734121073976459609856600871161440368435527882227930287655410254185677284861318244238418501298886566101',
    '205003585881203477810765473066461502021674065765547226283422265604212096520218613764332957379461141562783276292726719511829671069',
    '34645606013923387750019364948231993841662917114377481241898362887111844311916945726172269797128932924110373693470815597499214410661',
    '5855107416353052529753272676251206959241032992329794329880823327921901688713963827723113595714789664174653154196567835977367235401709',
    '989513153363665877528303082286453976111734575703735241749859142418801385392659886885206197675799453245516383059219964280175062782888821',
    '167227722918459533302283220906410721962883143293931255855726195068777434131359520883599847407210107598492268737008173963349585610308210749',
    '28261485173219661128085864333183412011727251216674382239617726966623386368199759029328374211818508184145193416554381399806079968142087616581',
    '4776190994274122730646511072307996629981905455617970598495395857359352296225759275956495241797327883120537687397690456567227514616012807202189',
    '807176278032326741479260371220051430466942021999437031145721899893730538062153317636647695863748412247370869170209687159861449970106164417169941',
    '136412790987463219309995002736188691748913201717904858263627001082040460932503910680593460600973481669805676889765437130016585044947941786501720029',
    '23053761676881284063389155462415888905566331090325921046552963182864837897593160905020294841564518402197159394370358874972802872596202161918790684901',
    '3896085723392937006712767273148285225040709954265080656867450777904157604693244192948429828224403609971319937648590649870403685468758165364275625748269',
    '658438487253406354134457669162060203031879982270798631010599181465802635193158268608284640969924210085153069462611819828098222844220129946562580751457461',
    '111276104345825673848723346088388174312387717003764968640791261667720645347643747394800104323917191504390868739181397550948599660673201960969076146996310909',
    '18805661634444538880434245488937601458793524173636279700293723221844789063751793309721217630742005364242056816921656186110313342653771131403773868842376543621',
    '3178156816221127070793387487630454646536105585344531269349639224491769351774053069342885779595398906556907602059759895452642954908487321207237783834361635871949',
    '537108501941370474964082485409546835264601843923225784520089028939109020449814968718947696751622415208117384748099422331496659379534357284023185468007116462359381',
    '90771336828091610268929940034213415159717711623025157583895045890709424456018729713502160751024188170171838022428802374022935435141306380999918344093202682138735389',
    '15340355923947482135449159865782067161992293264291251631678262755529892733067165321581865166923087800759040625790467601209876088538880778388986200151751253281446280741',
    '2592520151147124480890908017317169350376697561665221525753626405684551871888350939347335213210001838328277865758589024604469058963070851547738667825645961804564421445229'
];



// BigInt

function convert10BigInt() {
    for (let i = 0; i < strings.length; i++) {
        const x = BigInt(strings[i]);

        assert(x.toString(10) === strings[i], 'wrong conversion');
    }
}



// BN.js

function convert10BN() {
    for (let i = 0; i < strings.length; i++) {
        const x = new BN(strings[i], 10);

        assert(x.toString(10) === strings[i], 'wrong conversion');
    }
}



// Suite

const suite = new benchmark.Suite('Convert decimal');

suite
    .add('own', () => {
        convert10();
    })
    .add('bigint', () => {
        convert10BigInt();
    })
    .add('bn.js', () => {
        convert10BN();
    })
    .on('cycle', event => {
        console.log(String(event.target));
    })
    .on('complete', () => {
        console.log('Fastest is ' + suite.filter('fastest').map('name'));
    })
    .on('error', event => {
        console.error(event.target.error);
    })
    .run();
